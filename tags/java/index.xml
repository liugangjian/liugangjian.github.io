<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Gangjian Liu</title>
    <link>https://liugangjian.github.io/tags/java/</link>
    <description>Recent content in java on Gangjian Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 18 Jan 2022 11:30:03 +0000</lastBuildDate><atom:link href="https://liugangjian.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Annotations - Introduction</title>
      <link>https://liugangjian.github.io/posts/usage-for-java-custom-annotations/</link>
      <pubDate>Tue, 18 Jan 2022 11:30:03 +0000</pubDate>
      
      <guid>https://liugangjian.github.io/posts/usage-for-java-custom-annotations/</guid>
      <description>Java custom annotations are generally used with  interceptors  or  AOP . Using the custom annotations to design your own framework can make the code look very elegant.
What is Annotations ?  Java annotation is an annotation mechanism, introduced by jdk5.0. Classes, methods, variables, parameters and packages in the Java language can be labeled. Unlike the Javadoc, Annotation can obtain annotation content through reflection.
 When the compiler generates class files, annotations can be embedded in bytecode.</description>
    </item>
    
  </channel>
</rss>
